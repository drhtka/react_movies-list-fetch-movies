{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","title","description","imgUrl","imdbUrl","findPicture","_jsxs","className","children","_jsx","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","addMovie","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","setTitle","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isError","setIsError","handleClickEnter","titleQuery","query","trim","toLowerCase","fetch","concat","then","res","json","catch","Response","Error","movieData","console","log","Title","Plot","Poster","imdbID","finally","_Fragment","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","find","film","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.260fec65.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title, description, imgUrl, imdbUrl,\n  } = movie;\n\n  // eslint-disable-next-line max-len\n  const DEFAULT_PICTURE = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  const findPicture = imgUrl === 'N/A' ? DEFAULT_PICTURE : imgUrl;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={findPicture}\n            alt={title}\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n          <br />\n          <a href={imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [title, setTitle] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleFindMovie = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsError(false);\n  };\n\n  const handleClickEnter = (titleQuery: string) => {\n    setIsLoading(true);\n    getMovie(titleQuery.trim().toLowerCase())\n      .then((movieData: MovieData | ResponseError) => {\n        // eslint-disable-next-line no-console\n        console.log('movieData', movieData);\n        if ('Title' in movieData) {\n          setMovie({\n            title: movieData.Title,\n            description: movieData.Plot,\n            imgUrl: movieData.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n            imdbId: movieData.imdbID,\n          });\n        } else {\n          setIsError(true);\n        }\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    handleClickEnter(title);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input', { 'input is-danger': isError },\n              )}\n              value={title}\n              onChange={handleFindMovie}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light', { 'is-loading': isLoading },\n              )}\n              disabled={!title}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ca426391';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.find(film => film.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}